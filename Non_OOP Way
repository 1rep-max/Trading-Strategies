import cufflinks
import numpy as np
import pandas as pd
from pylab import plt
plt.style.use('seaborn')
pd.set_option('mode.chained_assignment', None)
np.set_printoptions(suppress=True)
cufflinks.set_config_file(offline=True)
%config InlineBackend.figure_format = 'svg'

raw = pd.read_csv("Brent.csv",index_col=0)
data = pd.DataFrame(raw['Close'])
data.head()

SMA1 = 13
SMA2 = 34
data['SMA1'] = data['Close'].rolling(SMA1).mean()
data['SMA2'] = data['Close'].rolling(SMA2).mean()

data.dropna(inplace = True)
data['p'] = np.where(data['SMA1'] > data['SMA2'], 1, -1)
data.iloc[-800:].plot(secondary_y='p') #last n of trading data

data['r'] = np.log(data['Close']/ data['Close'].shift(1)) # Calculates daily log returns

data['s'] = data['p'].shift(1) * data['r'] # log returns of the strategy
data.tail()

data['r'].hist(bins=50) # In trading it is impt to get the large movements correct.

data.dropna(inplace=True)
data[['r', 's']].sum()  # sum of log returns
data[['r', 's']].sum().apply(np.exp)  # gross returns (complete period)
data[['r', 's']].sum().apply(np.exp) - 1  # net returns (complete period)
data[['r', 's']].cumsum().apply(np.exp).plot();  # gross returns over time
